#!/bin/sh

KDEDIR=$(grep kdedir $HOME/.kdesrc-buildrc  | awk '{ print $2 }')

export KDE_BUILD=$(grep build-dir $HOME/.kdesrc-buildrc  | awk '{ print $2 }')
export KDE_SRC=$(grep source-dir $HOME/.kdesrc-buildrc  | awk '{ print $2 }')

##
# A function to easily change to the build directory.
# Usage: cb KDE/kdebase
#   will change to $KDE_BUILD/KDE/kdebase
# Usage: cb
#   will simply go to the build folder if you are currently in a src folder
#   Example:
#     $ pwd
#     /home/user/src/KDE/kdebase
#     $ cb && pwd
#     /home/user/build/KDE/kdebase
#
function cb {
        local dest

    # Make sure build directory exists.
    mkdir -p "$KDE_BUILD"

    # command line argument
    if test -n "$1"; then
        cd "$KDE_BUILD/$1"
        return
    fi
    # substitute src dir with build dir
    dest=`pwd | sed -e s,$KDE_SRC,$KDE_BUILD,`
    if test ! -d "$dest"; then
        # build directory does not exist, create
        mkdir -p "$dest"
    fi
    cd "$dest"
}

##
# Change to the source directory.  Same as cb, except this
# switches to $KDE_SRC instead of $KDE_BUILD.
# Usage: cs KDE/kdebase
#   will change to $KDE_SRC/KDE/kdebase
# Usage: cs
#   will simply go to the source folder if you are currently in a build folder
#   Example:
#     $ pwd
#     /home/myuser/kde/build/master/KDE/kdebase
#     $ cs && pwd
#     /home/myuser/kde/src/master/KDE/kdebase
#
function cs {
        local dest current

    # Make sure source directory exists.
    mkdir -p "$KDE_SRC"

    # command line argument
    if test -n "$1"; then
        cd "$KDE_SRC/$1"
    else
        # substitute build dir with src dir
        dest=`pwd | sed -e s,$KDE_BUILD,$KDE_SRC,`
        current=`pwd`
        if [ "$dest" = "$current" ]; then
            cd "$KDE_SRC"
        else
            cd "$dest"
        fi
    fi
}

##
# Add autocompletion to cs function
#
function _cs_scandir
{
        local base ext

    base=$1
    ext=$2
    if [ -d $base ]; then
        for d in `ls $base`; do
            if [ -d $base/$d ]; then
                dirs="$dirs $ext$d/"
            fi
        done
    fi
}

function _cs()
{
    local cur dirs
    _cs_scandir "$KDE_SRC"
    _cs_scandir "$KDE_SRC/KDE" "KDE/"
    _cs_scandir "$KDE_SRC/kde" "kde/"
    _cs_scandir "$KDE_SRC/kde/pim" "kde/pim/"
    _cs_scandir "$KDE_SRC/frameworks" "frameworks/"
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${dirs}" -- ${cur}) )
}

# Setup shell
complete -F _cs cs
complete -F _cs cb

